name: 'publish'
on:
  push:
    branches:
      - main

jobs:
  build-macos:
    name: Build for macOS
    runs-on: macos-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CONTROL_REPO_TOKEN }}
          submodules: recursive

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install submodule dependencies
        working-directory: ./cli
        run: cd packages/wvcdm && npm ci

      - name: Install app dependencies
        working-directory: ./cli
        run: npm ci

      - name: Get package name and version
        working-directory: ./cli
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        working-directory: ./cli
        run: npm run build:macos

      - name: Compress
        working-directory: ./cli
        run: npm run zip:macos

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: macos
          path: ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-macos-x64.zip

  build-win:
    name: Build for Windows
    runs-on: windows-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CONTROL_REPO_TOKEN }}
          submodules: recursive

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install submodule dependencies
        working-directory: ./cli
        run: cd packages/wvcdm && npm ci

      - name: Install app dependencies
        working-directory: ./cli
        run: npm ci

      - name: Get package name and version
        working-directory: ./cli
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        working-directory: ./cli
        run: npm run build:win

      - name: Compress
        working-directory: ./cli
        run: tar -cvzf streamyx-v${{ env.PACKAGE_VERSION }}-win-x64.zip /build/streamyx-win-x64.exe

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: win
          path: ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-win-x64.zip

  build-linux:
    name: Build for Linux
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CONTROL_REPO_TOKEN }}
          submodules: recursive

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install submodule dependencies
        working-directory: ./cli
        run: cd packages/wvcdm && npm ci

      - name: Install app dependencies
        working-directory: ./cli
        run: npm ci

      - name: Get package name and version
        working-directory: ./cli
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        working-directory: ./cli
        run: npm run build:linux

      - name: Compress
        working-directory: ./cli
        run: npm run zip:linux

      - name: Upload build
        uses: actions/upload-artifact@v3
        with:
          name: linux
          path: ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-linux-x64.zip

  upload:
    runs-on: ubuntu-latest
    needs: [build-win, build-macos, build-linux]
    steps:
      - name: Clone repository
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.CONTROL_REPO_TOKEN }}
          submodules: recursive

      - name: Download Windows build
        uses: actions/download-artifact@v3
        with:
          name: win

      - name: Download macOS build artifact
        uses: actions/download-artifact@v3
        with:
          name: macos

      - name: Download Linux build
        uses: actions/download-artifact@v3
        with:
          name: linux

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: '${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-win-x64.zip,
            ${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-macos-x64.zip,
            ${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-linux-x64.zip'
          tag: 'v${{ env.PACKAGE_VERSION }}'
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
