name: 'publish'
on:
  push:
    branches:
      - main

jobs:
  setup:
    name: Setup
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.CONTROL_REPO_TOKEN }}
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Install submodule dependencies
        working-directory: ./cli
        run: cd packages/wvcdm && npm ci

      - name: Install app dependencies
        working-directory: ./cli
        run: npm ci

      - name: Get package name and version
        working-directory: ./cli
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        working-directory: ./cli
        run: npm run build

      - name: Compress
        working-directory: ./cli
        run: npm run zip

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: './cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-win-x64.zip,
            ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-macos-x64.zip,
            ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-macos-arm64.zip,
            ./cli/${{ env.PACKAGE_NAME }}-v${{ env.PACKAGE_VERSION }}-linux-x64.zip'
          tag: 'v${{ env.PACKAGE_VERSION }}'
          token: ${{ secrets.GITHUB_TOKEN }}
          draft: true
